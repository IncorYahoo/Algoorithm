 
1.1、有A、B、C、D四个人，要在夜里过一座桥。
他们通过这座桥分别需要耗时1、2、5、10分钟，只有一支手电，并且同时最多只能两个人一起过桥。
请问，如何安排，能够在17分钟内这四个人都过桥？
答案：A & B -->2 mins
     1 mins <-- A
     C & D -->10 mins
     2 mins <-- B
     A & B --> 2 mins
一共 2 ＋ 1 ＋ 10 ＋ 2 ＋ 2 ＝ 17 mins
 
 
1.4 某人去玩具店买小熊，单价30元. 付给玩具店老板100元 玩具店老板没零钱,
去水果店换了100元零钱回来找给那人70元. 那人走后, 水果店老板找到玩具店老板说刚才的100元是假币,
玩具店老板赔偿了水果店老板100元 　　
问：玩具店老板损失了多少钱?
答案： 70＋小熊的进价
2 请定义一个宏，比较两个数a、b的大小，不能使用大于、小于、if语句
答案：
#define   max(a,b)   ((((long)((a)-(b)))&0x8 000 0000)?b:a)
#define max(a,b) ((long)(a-b))&0x8000 0000)?b:a;

若a > b ,则a-b的二进制最高位为0，与上任何数还是0，所以大数为a；
否则，a-b为负数，二进制最高位为1，与上0x80000000（最高位为1其他为0）之后为1，所以此时的大数为b.
3 计算 a^b << 2
答案：
运算符优先级：括号，下标，->和.(成员)最高；
              单目的比双目的高；
              算术双目的比其他双目的高；
              位运算 高于 关系运算；
              关系运算 高于 按位运算（与，或，异或）；
              按位运算 高于 逻辑运算；
              三目的只有一个 条件运算，低于逻辑运算；
              赋值运算仅比 , （顺序运算）高。
在此题中，位左移"<<" 优先级高于 按位异或"^",所以b先左移两位（相当于乘以4），再与a异或。
例如： 当 a = 6； b = 4 时； 则 a^b<<2 = 22
4、如何输出源文件的标题和目前执行行的行数？
答案： printf("The file name: %d\n", __FILE__);
       printf("The current line No:%d\n", __LINE__);

ANSI C标准预定义宏:
__LINE__
__FILE__
__DATE__
__TIME__
__STDC__        当要求程序严格遵循ANSI C标准时该标识符被赋值为1
__cplusplus__   当编写C++程序时该标识符被定义


5、 a[3][4]哪个不能表示 a[1][1]: *(&a[0][0]+5) *(*(a+1)+1) *(&a[1]+1) *(&a[0][0]+4)
答案: *(*(a+1)+1)
a是数组的首地址，a+1相当于&a[0][1], *(a+1)=a[0][1],则*(*(a+1)+1)= *(a[0][1] + 1) =/= a[1][1]
 

7、 希尔 冒泡 快速 插入 哪个平均速度最快？
答案：快速排序
快速排序、归并排序和基数排序在不同情况下都是最快最有用的。
8、enum的声明方式
答案：enum 枚举类型名 {
               枚举常量1，
               枚举常量2，
               ...
               枚举常量n
              };
For example:
enum weekday { sunday, monday, tuesday, wednesday, thursday, friday, saturday};
 
enum weekday week_day;//week_day 就是一个枚举类型变量
9、频繁的插入删除操作使用什么结构比较合适，链表还是数组？
答案：链表
 
  
13、不能做switch()的参数类型是：
答案：switch的参数不能为浮点型。

 
15、写出float x 与“零值”比较的if语句。
if(x>=0.000001 && x<=-0.000001)（x不为0的比较）
float: 6位精度
double: 16位精度


数据库
*************************************************************************************
1、有个表tableQQ，有整型的ID项和字符类型的Nickname项，这两个项都不允许为空
(1)写出建立该表的SQL语句
(2)找出Nickname为QQ的用户，按ID降序排列的SQL语句
(3)写出删除ID为1234用户记录的SQL语句
(4)写出添加ID为5555，Nickname为'1234'的SQL语句
答案： 
(1) CREATE TABLE tableQQ
      (
       ID NUMBER(12) NOT NULL,
       Nickname Varchar2(30) NOT NULL
       );
      
(2) select * from tableQQ where Nickname = 'QQ' order by ID desc;
(3) delete from tableQQ where ID='1234';
(4) insert into tableQQ values(5555,'1234');
//删除表
(5)drop table tableQQ;  
======================================================================
操作系统 网络
======================================================================
 1、描述实时系统的基本特性
答案：在特定时间内完成特定的任务，实时性与可靠性。
2、Internet采用哪种网络协议？该协议的主要层次结构？
答案：TCP/IP协议。应用层、传输层、网络层、数据链路层和物理层。
3、Internet物理地址和IP地址转换采用什么协议？
答案：地址解析协议ARP address resolution protocol
4、IP地址的编码分为哪俩部分？
答案：网络号和主机号。不过是要和“子网掩码”按位与上之后才能区分哪些是网络位哪些是主机位。

 
10 二分查找是 顺序存储 链存储 按value有序中的哪些
    顺序存储 按value有序
 
1 linux下调试core的命令，察看堆栈状态命令
  $ ls -l core.*
  $ gdb --core=core.9128
3 填空补全程序，按照我的理解是添入：

  win32调入dll的函数名查找函数入口的函数名找到函数的调用形式把formView加singledoc的声明 将singledoc加到app的声明

   typedef void(*SAY)(char*,int);
  SAY Say;
  typedef float(*SUM)(float,float);
  SUM Sum;
   hdll;
  HINSTANCE hdll=LoadLibrary("..\\..\\SayHello\\Debug\\SayHello.dll");
   
      //GetProcAddress函数获得获得获得DLL导出函数地址
      Say=(SAY)GetProcAddress(hdll,"Say");
   
 
 
　3．两个数相乘，小数点后位数没有限制，请写一个高精度算法与大数相乘原理一样，只是调整小数点位置，即有效小数个数
算法提示：
         输入 string a, string b；计算string c=a*b; 返回 c;
 
1，   纪录小数点在a,b中的位置l1,l2，则需要小数点后移动位置数为l=length(a)+length(b)-l1-l2-2;
 
2，   去掉a,b中的小数点，
（a,b小数点后移，使a,b变为整数）
 
3， 计算c=a*b;
（要么用java的BigInterger搞, 要么自己用C++写高精度数乘法，超过百万位，用FFT,我就不细说，这都预先写过就别做了
）
 
4， 输出c
（注意在输出倒数第l个数时，输出一个小数点。若是输出的数少于l个，就补0）
 
　4．写一个病毒
　　while (1)
 
      {
          int *p = new int[10000000];
      }
上面这个不对，没有传染性，寄生性……
 
　5．不使用额外空间,将 A,B两链表的元素交叉归并将树序列化转存在数组或 链表中
 
　　struct st{
　　int i;
　　short s;
　　char c;
　　};
sizeof(struct st);
 
8
   char * p1;
   void * p2;
   int p3;
   char p4[10];
   sizeof(p1...p4) =?
 
4，4，4，10
 
5.让你在100000000个浮点数中找出最大的10000个，要求时间复杂度优。
最小堆 lg(n)
二分查找 lg(n)
快速排序 O(nlogn)
双向链表的删除结点 O(n)
 
 linux的子进程操作系统资源抢占管理，两个进程要对文件进行独占访问，采用共享变量，判断可行否
 
3. 在多级存储体系中，“Cache-主存”结构的作用是解决（D ）的问题。
A. 主存容量不足B. 辅存与CPU 速度不匹配C. 主存与辅存速度不匹配
D. 主存与CPU 速度不匹配
 
  
 const的含义及实现机制
    常数字替换 

 
腾讯笔试题：tcp三次握手的过程，accept发生在三次握手哪个阶段？

accept发生在三次握手之后。
第一次握手：客户端发送syn包(syn=j)到服务器。
第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个ASK包（ask=k）。
第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)。

三次握手完成后，客户端和服务器就建立了tcp连接。这时可以调用accept函数获得此连接。




腾讯笔试题：用UDP协议通讯时怎样得知目标机是否获得了数据包。

用UDP协议通讯时怎样得知目标机是否获得了数据包？

可以在每个数据包中插入一个唯一的ID，比如timestamp或者递增的int。

发送方在发送数据时将此ID和发送时间记录在本地。

接收方在收到数据后将ID再发给发送方作为回应。

发送方如果收到回应，则知道接收方已经收到相应的数据包；如果在指定时间内没有收到回应，则数据包可能丢失，需要重复上面的过程重新发送一次，直到确定对方收到。

关于UDP协议的简单介绍，可以参考
http://baike.baidu.com/view/30509.htm

腾讯笔试题：统计论坛在线人数分布

求一个论坛的在线人数，假设有一个论坛，其注册ID有两亿个，每个ID从登陆到退出会向一个日志文件中记下登陆时间和退出时间，要求写一个算法统计一天中论坛的用户在线分布，取样粒度为秒。

一天总共有 3600*24 = 86400秒。

定义一个长度为86400的整数数组int delta[86400]，每个整数对应这一秒的人数变化值，可能为正也可能为负。开始时将数组元素都初始化为0。

然后依次读入每个用户的登录时间和退出时间，将与登录时间对应的整数值加1，将与退出时间对应的整数值减1。

这样处理一遍后数组中存储了每秒中的人数变化情况。

定义另外一个长度为86400的整数数组int online_num[86400]，每个整数对应这一秒的论坛在线人数。
假设一天开始时论坛在线人数为0，则第1秒的人数online_num[0] = delta[0]。第n+1秒的人数online_num[n] = online_num[n-1] + delta[n]。

这样我们就获得了一天中任意时间的在线人数。

腾讯笔试题：从10G个数中找到中数

在一个文件中有 10G 个整数，乱序排列，要求找出中位数。内存限制为 2G。

不妨假设10G个整数是64bit的。

2G内存可以存放256M个64bit整数。

我们可以将64bit的整数空间平均分成256M个取值范围，用2G的内存对每个取值范围内出现整数个数进行统计。这样遍历一边10G整数后，我们便知道中数在那个范围内出现，以及这个范围内总共出现了多少个整数。

如果中数所在范围出现的整数比较少，我们就可以对这个范围内的整数进行排序，找到中数。如果这个范围内出现的整数比较多，我们还可以采用同样的方法将此范围再次分成多个更小的范围（256M=2^28，所以最多需要3次就可以将此范围缩小到1，也就找到了中数）。




 
 

1．总线基本内容？ 

    总线（Bus）是计算机各种功能部件之间传送信息的公共通信干线，它是由导线组成的传输线束， 按照计算机所传输的信息种类，计算机的总线可以划分为数据总线、地址总线和控制总线，分别用来传输数据、数据地址和控制信号。

    总线的带宽指的是单位时间内总线上传送的数据量，即每钞钟传送MB的最大稳态数据传输率。与总线密切相关的两个因素是总线的位宽和总线的工作频率，它们之间的关系：

    总线的带宽=总线的工作频率*总线的位宽/8

    或者 总线的带宽=（总线的位宽/8 ）/总线周期

    总线的工作时钟频率以MHZ为单位，工作频率越高，总线工作速度越快，总线带宽越宽。

2．结构化程序的三种基本逻辑结构是什么？

1)顺序结构：顺序结构是一种线性、有序的结构，它依次执行各语句模块。

2)循环结构：循环结构是重复执行一个或几个模块，直到满足某一条件为止。

3)选择结构：选择结构是根据条件成立与否选择程序执行的通路。

  采用结构化程序设计方法，程序结构清晰，易于阅读、测试、排错和修改。由于每个模块执行单一功能，模块间联系较少，使程序编制比过去更简单，程序更可靠，而且增加了可维护性，每个模块可以独立编制、测试。

 3．数据库左外连接、右外连接？ 

SQL中连接可分为以下几类：     
1. 内连接：inner join。内连接使用比较运算符根据每个表共有的列的值匹配两个表中的行。例如，
  a表             b表      
  id   name          id     job   parent_id   
   1    张3                  1     23     1   
   2   李四          2     34     2   
   3   王武          3     34     4      
  a.id同parent_id   存在关系   
 内连接   
 select   a.*,b.*   from   a   inner   join   b     on   a.id=b.parent_id     
  结果是     
 1   张3   1     23     1   
  2   李四 2     34     2  
    
2.外连接。外连接可以是左向外连接、右向外连接或完整外部连接。     
  左向外连接：LEFT   JOIN   或   LEFT   OUTER   JOIN。结果集包括LEFT  OUTER子句中指定的左表的所有行，而不仅仅是连接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。例如：   
  select   a.*,b.*   from   a   left   join   b     on   a.id=b.parent_id     
  结果是     
 1   张3    1     23     1   
2   李四 2     34     2   
3   王武 null null  null

  右向外连接：RIGHT  JOIN  或  RIGHT   OUTER   JOIN。是左向外连接的反向连接。将返回右表的所有行。如果右表的某行在左表中没有匹配行，则将为左表返回空值。例如：   
  select   a.*,b.*   from   a   right   join   b     on   a.id=b.parent_id      
   结果是     
  1   张3     1     23     1   
 2   李四  2     34     2   
null  null  3     34     4    

  完整外部连接(全连接)：FULL JOIN或FULL OUTER JOIN。返回左表和右表中的所有行。当某行在另一个表中没有匹配行时，则另一个表的选择列表列包含空值。如果表之间有匹配行，则整个结果集行包含基表的数据值。例如：
  select   a.*,b.*   from   a   full   join   b     on   a.id=b.parent_id   
  结果是     
 1   张3     1     23     1   
2   李四  2     34     2   
null null    3     34     4   
3   王武  null  null  null

 4．计算机的字长是16位，它的存储器容量是64KB，若按字编址那么它的最大寻址范围是？  
首先 我觉得64KB应该才是本题所讲   因为计算机里大写的B跟小写的b表示的单位不一样

再说明下此题  因为计算机的字长是16位 即 16bit  则1字节=16bit
因为每2^16个bit为一个字   一个字为一个单位  0到最大单位

容量64KB=524288bit 524288/16==32728K   则0~32728为寻址范围 若要简写则是0~32728/1024即为 0~32K  换算成二进制则是000000000000000~111111111111111 

5．(sed、top、vim、？)其中处理文本的命令有？

linux下的文本处理命令sed&awk&grep


7． 文件系统的功能？ 
　
文件系统功能：它能定义需要的文件组织方式，并提供建立和存取数据的环境。

文件系统是操作系统的一个重要组成部分， 通过对操作系统所管理的存储空间的抽象，向用户提供统一的、对象化的访问接口，屏蔽对物理设备的直接操作和资源管理。 

根据计算环境和所提供功能的不同，文件系统可划分为四个层次，从低到高依次是：单处理器单用户的本地文件系统，如DOS的文件系统；多处理器单用户的本地文件系统，如OS/2的文件系统；多处理器多用户的文件系统，如Unix的本地文件系统；多处理器多用户的分布式文件系统。

操作系统命名、存储和组织文件的全部结构。例如，MS-DOS 和Windows 的老版本使用FAT16 文件系统。Windows 98 可以使用FAT16，也可以使用FAT32 文件系统。 

文件系统（File System）是可快速恢复的日志式文件系统，它提供了关键应用所需的高性能和易管理性。 File System以连续的高可用性、大大增加的带宽和结构完整性来加强Unix文件的管理。它提供了可伸缩的性能和容量，以此来满足用户不断增长的需求。

8．结构体内struct s{u32，int，u16，varchar}，sizeof(s)是多少？字符数

  结构体里面的字节数相加，4+4+2+1。

  因此在STM32编程中，常用的数据类型有：char（字符型），u8，u16 ，u32，但是在一些计算中，涉及到负数，小数，因此要用到：int   float doulbe 型。 

  其中u8——1个字节，无符号型（不能表达负数，如果用来当作负数的话，就出错了）； 
  u16 ——2个字节，无符号型（参看前边STM32f10x.h中的定义）；      
  u32——4个字节，无符号型； 
      
  int——4个字节,有符号型，可以表达负整数
  float ——4个字节，有符号型，可以表达负数/小数；    
  double——8个字节，有符号弄，可以表达负数/小数
  char 1个字节
 
9．  某一SRAM芯片的容量是512×8位，除电源和接地线外，该芯片的其他引脚最少应为   根？         

解答：地址线为9根，数据线为8根，片选信号线1根，读写信号线1根，所以应该是9+8+2＝19根（除电源线和地线）2^9=512 地址线为9根，数据线要8 bit传输一个字节，则有8根，再加上片选信号一根，读写信号一根，9+8+1+1=19。

10．SQL语句性能分析的关键字？ 

在sql语句中in关键字提示查询性能，rule ，cost，choose。







 
17．数据库操作：truncate和rollback  

解析：Truncate是一个能够快速清空资料表内所有资料的SQL语法。并且能针对具有自动递增值的字段，做计数重置归零重新计算的作用。
如果有ROLLBACK语句，DELETE操作将被撤销，但TRUNCATE不会撤销。













